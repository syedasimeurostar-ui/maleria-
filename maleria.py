# -*- coding: utf-8 -*-
"""maleria.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10PpPKkPHK3PEPVxvU655feM5KmVl9MuL
"""

import tensorflow as tf
import tensorflow_datasets as tfds

# Load dataset
dataset, info = tfds.load('malaria', as_supervised=True, with_info=True)
data = dataset['train']  # There is only 'train' split in Malaria dataset

# Split manually: 80% for training, 20% for testing
train_size = int(0.8 * info.splits['train'].num_examples)
test_size = int(0.2 * info.splits['train'].num_examples)

train_data = data.take(train_size)
test_data = data.skip(train_size)

print("✅ Dataset Loaded and Split Successfully!")
print("Training samples:", train_size)
print("Testing samples:", test_size)

IMG_SIZE = 128
BATCH_SIZE = 32

def preprocess(image, label):
    image = tf.image.resize(image, (IMG_SIZE, IMG_SIZE))
    image = tf.cast(image, tf.float32) / 255.0
    return image, label

train = train_data.map(preprocess).shuffle(1000).batch(BATCH_SIZE).prefetch(tf.data.AUTOTUNE)
test = test_data.map(preprocess).batch(BATCH_SIZE).prefetch(tf.data.AUTOTUNE)

model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(IMG_SIZE, IMG_SIZE, 3)),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
    tf.keras.layers.MaxPooling2D(2,2),

    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dropout(0.5),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])

history = model.fit(train, epochs=10, validation_data=test)

test_loss, test_acc = model.evaluate(test)
print(f"\n✅ Test Accuracy: {test_acc*100:.2f}%")

model.save('malaria_cnn_model.h5')
print("✅ Model saved successfully as malaria_cnn_model.h5")

